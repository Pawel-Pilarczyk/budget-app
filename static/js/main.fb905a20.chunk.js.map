{"version":3,"sources":["components/Header.js","components/Overview.js","components/Menu.js","components/AddIncome.js","components/AddExpense.js","components/List.js","components/Charts.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","id","onClick","menuOption","addIncomePopUp","addExpensePopUp","Overview","balance","className","totalIncomes","totalExpenses","Menu","overviewHidden","listHidden","chartsHidden","document","getElementById","style","display","AddIncome","closeWindow","onSubmit","addIncomeFunction","type","step","min","required","name","value","AddExpense","addExpenseFunction","List","listOfExpenses","expensesList","map","x","ammount","date","listOfIncomes","incomesList","Chart","incomeWork","incomeSideHussle","incomeBonus","incomeInvestment","incomeOther","income","parseFloat","expenseRent","expenseBills","expenseCar","expenseFood","expeseEO","expenseEntert","expenses","chartDataIncome","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","chartDataExpenses","width","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","Date","NewIncome","this","getDate","getMonth","getFullYear","NewExpense","App","menuHidden","addIncomeHidden","addExpenseHidden","state","Expenses","Incomes","hideMenu","bind","hideAddIncome","hideAddExpense","addNewIncome","addNewExpense","e","preventDefault","newAmmount","typeOfIncome","newIncome","setState","newAmmountEx","typeOfExpense","newExpense","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb905a20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) =>{\r\n    return(\r\n        <div id=\"header\">\r\n            <button id=\"menu-btn\" onClick={props.menuOption}>MENU</button>\r\n            <h2>Account: USER</h2>\r\n            <div>\r\n                <button id=\"add-income-btn\" onClick={props.addIncomePopUp}>+ Income</button>\r\n                <button id=\"add-expense-btn\" onClick={props.addExpensePopUp}>- Expense</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Overview = (props) =>{\r\n    return(\r\n        <div id=\"overview\">\r\n            <h1>Balance: {props.balance}$</h1>\r\n            <div>\r\n                <div id=\"incomes-OV\" className=\"partial-list\">\r\n                    <h2>Income</h2>\r\n                    <h2>{props.totalIncomes}$</h2>\r\n                </div>\r\n                <div id=\"expenses-OV\" className=\"partial-list\">\r\n                    <h2>Expenses</h2>\r\n                    <h2>{props.totalExpenses}$</h2>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport Overview from './Overview';\r\n\r\n\r\nconst Menu = () =>{\r\n    let overviewHidden = false;\r\n    let listHidden = false;\r\n    let chartsHidden = true;\r\n\r\n    function hideOverview(){\r\n        if(overviewHidden){\r\n          document.getElementById('overview').style.display =\"block\";\r\n          overviewHidden = false;\r\n        }else{\r\n          document.getElementById('overview').style.display =\"none\";\r\n          overviewHidden = true;\r\n        }\r\n    }\r\n\r\n    function hideList(){\r\n        if(listHidden){\r\n          document.getElementById('list').style.display =\"block\";\r\n          listHidden = false;\r\n        }else{\r\n          document.getElementById('list').style.display =\"none\";\r\n          listHidden = true;\r\n        }\r\n    }\r\n\r\n    function hideChart(){\r\n        if(chartsHidden){\r\n            document.getElementById('charts').style.display =\"block\";\r\n            chartsHidden = false;\r\n        }else{\r\n          document.getElementById('charts').style.display =\"none\";\r\n          chartsHidden = true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div id=\"menu\">\r\n                <button onClick={hideOverview}>Overview</button>\r\n                <button onClick={hideChart}>Charts</button>\r\n                <button onClick={hideList}>List</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst AddIncome = (props)=>{\r\n  return(\r\n      <div id=\"add-income\" className=\"pop-up\">\r\n        <button className=\"closeWindow\" onClick={props.closeWindow}>X</button>\r\n        <h2>Add Income</h2>\r\n        <form onSubmit={props.addIncomeFunction}>\r\n            <input type=\"number\" step=\"0.01\" min='0' id=\"ammount\" required></input>\r\n            <select id=\"typeOfIncome\" name=\"typeOfIncome\" required>\r\n                <option value=\"Work\">Work</option>\r\n                <option value=\"Side Hussle\">Side Hussle</option>\r\n                <option value=\"Bonus\">Bonus</option>\r\n                <option value=\"Investment\">Investment</option>\r\n                <option value=\"other\">Other</option>\r\n            </select>\r\n            <input type=\"submit\"></input>\r\n        </form>\r\n      </div>\r\n  )   \r\n}\r\n\r\nexport default AddIncome;","import React from 'react';\r\n\r\nconst AddExpense = (props)=>{\r\n  return(\r\n      <div id=\"add-expense\" className=\"pop-up\">\r\n        <button className=\"closeWindow\" onClick={props.closeWindow}>X</button>\r\n        <h2>Add Expense</h2>\r\n        <form onSubmit={props.addExpenseFunction}>           \r\n            <input type=\"number\" step=\"0.01\" min='0'  id=\"ammountExpense\" required></input>\r\n            <select id=\"typeOfExpense\" name=\"typeOfExpense\" required>\r\n                <option value=\"Rent\">Rent</option>\r\n                <option value=\"Bills\">Bills</option>\r\n                <option value=\"Car\">Car</option>\r\n                <option value=\"Food\">Food</option>\r\n                <option value=\"Eating Out\">Eating Out</option>\r\n                <option value=\"Entertainment\">Entertainment</option>\r\n            </select>\r\n            <input type=\"submit\"></input>\r\n        </form>\r\n      </div>\r\n  )   \r\n}\r\n\r\nexport default AddExpense;","import React from 'react';\r\n\r\nconst List = (props) =>{\r\n\r\n    const listOfExpenses= props.expensesList.map(x =>{\r\n        return(\r\n            <ul>\r\n                <li>Quote: {x.ammount}$</li>\r\n                <li>Type: {x.type}</li>\r\n                <li>Date: {x.date}</li>\r\n            </ul>\r\n        )\r\n    })\r\n\r\n    const listOfIncomes = props.incomesList.map(x =>{\r\n        return(\r\n            <ul>\r\n                <li>Quote: {x.ammount}$</li>\r\n                <li>Type: {x.type}</li>\r\n                <li> Date: {x.date}</li>\r\n            </ul>\r\n        )\r\n    })\r\n    return(\r\n        <div id=\"list\">\r\n            <div>\r\n                <div id=\"incomes-list\" className=\"partial-list\">\r\n                    {listOfIncomes}\r\n                </div>\r\n                <div id=\"expenses-list\" className=\"partial-list\">\r\n                    {listOfExpenses}\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React,{Component} from \"react\";\r\nimport {Pie,Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Chart = (props) =>{\r\n    let incomeWork = 0;\r\n    let incomeSideHussle = 0;\r\n    let incomeBonus = 0;\r\n    let incomeInvestment = 0;\r\n    let incomeOther = 0;\r\n    props.income.map(x  => {\r\n        if(x.type == \"Work\"){\r\n            incomeWork+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Side Hussle\"){\r\n            incomeSideHussle+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Bonus\"){\r\n            incomeBonus+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Investment\"){\r\n            incomeInvestment+= parseFloat(x.ammount);\r\n        }else if(x.type == \"other\"){\r\n            incomeOther+= parseFloat(x.ammount);\r\n        }\r\n    });\r\n\r\n    let expenseRent = 0;\r\n    let expenseBills = 0;\r\n    let expenseCar = 0;\r\n    let expenseFood = 0;\r\n    let expeseEO = 0;\r\n    let expenseEntert = 0;\r\n    props.expenses.map(x  => {\r\n        if(x.type == \"Rent\"){\r\n            expenseRent+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Bills\"){\r\n            expenseBills+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Car\"){\r\n            expenseCar+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Food\"){\r\n            expenseFood+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Eating Out\"){\r\n            expeseEO+= parseFloat(x.ammount);\r\n        }else if(x.type == \"Entertainment\"){\r\n            expenseEntert+= parseFloat(x.ammount);\r\n        }\r\n    });\r\n\r\n    const chartDataIncome = {\r\n        labels:['Work','Side Hussle','Bonus','Investment','Other'],\r\n        datasets: [{\r\n            label: '$ Ammounts of income',\r\n            data: [incomeWork,incomeSideHussle,incomeBonus,incomeInvestment,incomeOther],\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1,\r\n        }],\r\n    }\r\n\r\n    const chartDataExpenses = {\r\n        labels:['Rent','Bills','Car','Food','Eating Out','Entertainment'],\r\n        datasets: [{\r\n            label: '$ Ammount of expenses',\r\n            data: [expenseRent,expenseBills,expenseCar,expenseFood,expeseEO,expenseEntert],\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n        }],\r\n    }\r\n\r\n\r\n    return(\r\n        <div id=\"charts\">\r\n            <div id=\"barChartIncome\" className=\"chartDiv\">\r\n                <h2>Bar Chart Income</h2>\r\n                <Bar\r\n                    data={chartDataIncome}\r\n                    width={150}\r\n                    height={200}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                /> \r\n            </div>\r\n            <div id=\"barChartExpense\" className=\"chartDiv\">\r\n                 <h2>Bar Chart Expenses</h2>\r\n                <Bar\r\n                    data={chartDataExpenses}\r\n                    width={150}\r\n                    height={200}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                /> \r\n            </div> \r\n            <div id=\"pieChartIncome\" className=\"chartDiv\">\r\n                <h2>Pie Chart Income</h2>\r\n                <Pie\r\n                    data={chartDataIncome}\r\n                    width={150}\r\n                    height={200}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                    }}\r\n                /> \r\n            </div>\r\n            <div id=\"pieChartExpenses\" className=\"chartDiv\">\r\n                <h2>Pie Chart Expenses</h2>\r\n                <Pie\r\n                    data={chartDataExpenses}\r\n                    width={150}\r\n                    height={200}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                    }}\r\n                /> \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Chart;","import React from 'react';\nimport Header from './Header'\nimport Menu from './Menu';\nimport AddIncome from './AddIncome';\nimport AddExpense from './AddExpense';\nimport List from './List';\nimport Chart from './Charts';\nimport Overview from './Overview';\n\nconst date = new Date;\n\n// Creating new object which will be pushed into State -> Incomes\nclass NewIncome{\n  constructor(ammount,type){\n    this.ammount = ammount;\n    this.type = type;\n    this.date = `0${date.getDate()}:0${date.getMonth()}:${date.getFullYear()}`;\n  }\n};\n// Creating new object which will be pushed into State -> Expenses\nclass NewExpense{\n  constructor(ammount,type){\n    this.ammount = ammount;\n    this.type = type;\n    this.date = `0${date.getDate()}:0${date.getMonth()}:${date.getFullYear()}`;\n  }\n};\n//Creating new App component\nclass App extends React.Component {\n  constructor(){ \n    super();\n    this.state = {// Creting statest that will be passed down to components to be displayed\n      Expenses: [],\n      Incomes: [],\n    };\n    //binding functions\n    this.hideMenu = this.hideMenu.bind(this);\n    this.hideAddIncome = this.hideAddIncome.bind(this);\n    this.hideAddExpense = this.hideAddExpense.bind(this);\n    this.addNewIncome = this.addNewIncome.bind(this);\n    this.addNewExpense = this.addNewExpense.bind(this);\n  \n  }\n  // variables which will be responsible about displaying perticular parts of the APP\n  menuHidden = true;\n  addIncomeHidden = true;\n  addExpenseHidden = true;\n\n  //Variables resposnsible for holding data about total Incomes/Expenses/Budget\n  totalIncomes = 0;\n  totalExpenses = 0;\n  balance = 0;\n\n  hideMenu(){\n      if(this.menuHidden){\n        document.getElementById('menu').style.display =\"block\";\n        this.menuHidden = false;\n      }else{\n        document.getElementById('menu').style.display =\"none\";\n        this.menuHidden = true;\n      }\n  };\n  \n  hideAddIncome(){\n      if(this.addIncomeHidden){\n        document.getElementById('add-income').style.display =\"block\";\n        this.addIncomeHidden = false;\n      }else{\n        document.getElementById('add-income').style.display =\"none\";\n        this.addIncomeHidden = true;\n      }\n  }\n  \n  hideAddExpense(){\n      if(this.addExpenseHidden){\n        document.getElementById('add-expense').style.display =\"block\";\n        this.addExpenseHidden = false;\n      }else{\n        document.getElementById('add-expense').style.display =\"none\";\n        this.addExpenseHidden = true;\n      }\n  };\n\n  addNewIncome(e){\n    e.preventDefault();\n    const newAmmount = document.getElementById('ammount').value;\n    const typeOfIncome = document.getElementById('typeOfIncome').value;\n    const newIncome = new NewIncome(newAmmount,typeOfIncome);\n\n    this.setState({Incomes:[...this.state.Incomes, newIncome]});\n\n    document.getElementById('ammount').value = \"\";\n\n    document.getElementById('add-income').style.display =\"none\";\n    this.addIncomeHidden = true;\n\n    this.totalIncomes += parseFloat(newAmmount);\n    this.balance = this.totalIncomes - this.totalExpenses;\n  };\n\n  addNewExpense(e){\n    e.preventDefault();\n    const newAmmountEx = document.getElementById('ammountExpense').value;\n    const typeOfExpense = document.getElementById('typeOfExpense').value;\n    const newExpense = new NewExpense(newAmmountEx,typeOfExpense);\n\n    this.setState({Expenses:[...this.state.Expenses, newExpense]});\n\n    document.getElementById('ammountExpense').value = \"\";\n\n    document.getElementById('add-expense').style.display =\"none\";\n    this.addExpenseHidden = true;\n\n    this.totalExpenses += parseFloat(newAmmountEx);\n    this.balance = this.totalIncomes - this.totalExpenses;\n  };\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header menuOption ={this.hideMenu} addIncomePopUp={this.hideAddIncome} addExpensePopUp={this.hideAddExpense}/>\n        <Menu/>\n        <AddIncome addIncomeFunction={this.addNewIncome} closeWindow={this.hideAddIncome}/>\n        <AddExpense addExpenseFunction={this.addNewExpense} closeWindow={this.hideAddExpense}/>\n        <div id=\"content\">\n          <div>\n            <Overview balance={this.balance} totalIncomes={this.totalIncomes} totalExpenses={this.totalExpenses}></Overview>\n            <List expensesList={this.state.Expenses} incomesList={this.state.Incomes}/>\n          </div>\n          <Chart income={this.state.Incomes} expenses={this.state.Expenses}/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n    \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}